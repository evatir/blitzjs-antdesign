import j from "jscodeshift";
import { Collection } from "jscodeshift/src/Collection";
export declare const customTsParser: {
    parse(source: string, options?: Partial<{
        sourceType: "script" | "module" | "unambiguous" | undefined;
        strictMode: boolean | undefined;
    }> | undefined): import("@babel/types").File;
};
export declare enum TransformStatus {
    Success = "success",
    Failure = "failure"
}
export interface TransformResult {
    status: TransformStatus;
    filename: string;
    error?: Error;
}
export declare type StringTransformer = (program: string) => string;
export declare type Transformer = (program: Collection<j.Program>) => Collection<j.Program>;
export declare function stringProcessFile(original: string, transformerFn: StringTransformer): string;
export declare function processFile(original: string, transformerFn: Transformer): string;
export declare function transform(processFile: (original: string) => string, targetFilePaths: string[]): TransformResult[];
